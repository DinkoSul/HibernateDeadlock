2025-05-21 22:39:29.406121+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLTransactionRollbackException: Deadlock detected. The current transaction was rolled back. Details: "PUBLISHER"; SQL statement:
/* update for hr.java.hibernate.deadlo [40001-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:524)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.mvstore.db.MVTable.convertException(MVTable.java:699)
	at org.h2.mvstore.db.MVTable.convertLockException(MVTable.java:689)
	at org.h2.mvstore.db.MVPrimaryIndex.lockRow(MVPrimaryIndex.java:227)
	at org.h2.mvstore.db.MVPrimaryIndex.lockRow(MVPrimaryIndex.java:220)
	at org.h2.mvstore.db.MVTable.lockRow(MVTable.java:555)
	at org.h2.command.dml.Update.update(Update.java:70)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:134)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:781)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:328)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.update(UpdateCoordinatorStandard.java:245)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:169)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:371)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1425)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:487)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2324)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1981)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at hr.java.hibernate.deadlock.demo.DeadLockExample.updatePublishers(DeadLockExample.java:37)
	at hr.java.hibernate.deadlock.demo.DeadLockExample.lambda$main$0(DeadLockExample.java:57)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.h2.mvstore.MVStoreException: Transaction 2 has been chosen as a deadlock victim. Details:
Transaction 2 attempts to update map <table.4> entry with key <2> modified by transaction 1(20) OPEN 3
Transaction 1 attempts to update map <table.4> entry with key <1> modified by transaction 2(21) OPEN 3
 [2.2.224/105]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.tx.Transaction.tryThrowDeadLockException(Transaction.java:727)
	at org.h2.mvstore.tx.Transaction.waitFor(Transaction.java:675)
	at org.h2.mvstore.tx.TransactionMap.set(TransactionMap.java:381)
	at org.h2.mvstore.tx.TransactionMap.lock(TransactionMap.java:329)
	at org.h2.mvstore.db.MVPrimaryIndex.lockRow(MVPrimaryIndex.java:225)
	... 36 more
2025-05-21 22:40:24.074099+02:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLTransactionRollbackException: Deadlock detected. The current transaction was rolled back. Details: "PUBLISHER"; SQL statement:
/* update for hr.java.hibernate.deadlo [40001-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:524)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.mvstore.db.MVTable.convertException(MVTable.java:699)
	at org.h2.mvstore.db.MVTable.convertLockException(MVTable.java:689)
	at org.h2.mvstore.db.MVPrimaryIndex.lockRow(MVPrimaryIndex.java:227)
	at org.h2.mvstore.db.MVPrimaryIndex.lockRow(MVPrimaryIndex.java:220)
	at org.h2.mvstore.db.MVTable.lockRow(MVTable.java:555)
	at org.h2.command.dml.Update.update(Update.java:70)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:134)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:781)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:328)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.update(UpdateCoordinatorStandard.java:245)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:169)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:371)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1425)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:487)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2324)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1981)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at hr.java.hibernate.deadlock.demo.DeadLockExample.updatePublishers(DeadLockExample.java:37)
	at hr.java.hibernate.deadlock.demo.DeadLockExample.lambda$main$1(DeadLockExample.java:58)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.h2.mvstore.MVStoreException: Transaction 2 has been chosen as a deadlock victim. Details:
Transaction 2 attempts to update map <table.4> entry with key <1> modified by transaction 1(19) OPEN 3
Transaction 1 attempts to update map <table.4> entry with key <2> modified by transaction 2(20) ROLLING_BACK 3
 [2.2.224/105]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.tx.Transaction.tryThrowDeadLockException(Transaction.java:727)
	at org.h2.mvstore.tx.Transaction.waitForThisToEnd(Transaction.java:739)
	at org.h2.mvstore.tx.Transaction.waitFor(Transaction.java:677)
	at org.h2.mvstore.tx.TransactionMap.set(TransactionMap.java:381)
	at org.h2.mvstore.tx.TransactionMap.lock(TransactionMap.java:329)
	at org.h2.mvstore.db.MVPrimaryIndex.lockRow(MVPrimaryIndex.java:225)
	... 36 more
2025-05-22 19:18:31.050298+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLTransactionRollbackException: Deadlock detected. The current transaction was rolled back. Details: "PUBLISHER"; SQL statement:
/* update for hr.java.hibernate.deadlo [40001-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:524)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.mvstore.db.MVTable.convertException(MVTable.java:699)
	at org.h2.mvstore.db.MVTable.convertLockException(MVTable.java:689)
	at org.h2.mvstore.db.MVPrimaryIndex.lockRow(MVPrimaryIndex.java:227)
	at org.h2.mvstore.db.MVPrimaryIndex.lockRow(MVPrimaryIndex.java:220)
	at org.h2.mvstore.db.MVTable.lockRow(MVTable.java:555)
	at org.h2.command.dml.Update.update(Update.java:70)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:134)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:781)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:328)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.update(UpdateCoordinatorStandard.java:245)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:169)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:371)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1425)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:487)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2324)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1981)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at hr.java.hibernate.deadlock.demo.DeadLockExample.updatePublishers(DeadLockExample.java:37)
	at hr.java.hibernate.deadlock.demo.DeadLockExample.lambda$main$0(DeadLockExample.java:57)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.h2.mvstore.MVStoreException: Transaction 2 has been chosen as a deadlock victim. Details:
Transaction 2 attempts to update map <table.4> entry with key <2> modified by transaction 1(19) OPEN 3
Transaction 1 attempts to update map <table.4> entry with key <1> modified by transaction 2(20) ROLLING_BACK 3
 [2.2.224/105]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.tx.Transaction.tryThrowDeadLockException(Transaction.java:727)
	at org.h2.mvstore.tx.Transaction.waitForThisToEnd(Transaction.java:739)
	at org.h2.mvstore.tx.Transaction.waitFor(Transaction.java:677)
	at org.h2.mvstore.tx.TransactionMap.set(TransactionMap.java:381)
	at org.h2.mvstore.tx.TransactionMap.lock(TransactionMap.java:329)
	at org.h2.mvstore.db.MVPrimaryIndex.lockRow(MVPrimaryIndex.java:225)
	... 36 more
